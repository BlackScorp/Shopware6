name: 'Run E2E Tests'
description: "Runs installation and Cypress tests"


branding:
  icon: 'award'
  color: 'green'


inputs:
  pluginVersion:
    description: "An optional specific plugin version that will be used to checkout the source code"
    default: ''
    required: false
  # ------------------------------------------------------------------------------------
  shopware:
    description: "The Shopware version that is used to run the Cypress tests."
    required: true
  php:
    description: "The PHP Version that is used for the Shopware container."
    required: true
  # ------------------------------------------------------------------------------------
  filters:
    description: "An optional filter for the Cypress tests. Leave empty to run all tests"
    required: false
    default: ""
  runCypress:
    description: "If disabled, only the plugin installation will be tested"
    default: '1'
    required: false
  removeDeprecatedTests:
    description: "If enabled, tests that are marked es deprecated will be removed"
    default: '0'
    required: false
  # ------------------------------------------------------------------------------------
  testrail:
    description: "If enabled, all results will be sent to TestRail."
    default: '0'
    required: false
  # ------------------------------------------------------------------------------------
  TESTRAIL_DOMAIN:
    description: "The domain for the TestRail endpoint"
    default: ''
    required: false
  TESTRAIL_USERNAME:
    description: "The username for the TestRail endpoint"
    default: ''
    required: false
  TESTRAIL_PASSWORD:
    description: "The password for the TestRail endpoint"
    default: ''
    required: false
  # ------------------------------------------------------------------------------------
  # ------------------------------------------------------------------------------------
  # PRIVATE CONSTANTS
  shopDomain:
    description: ''
    default: 'local.mollie.shop'
    required: false
  storeApiKey:
    description: ''
    default: 'SWSCOVFSNKLBYUTKS1VSOEDTUQ'
    required: false
  zipFile:
    description: ''
    default: '~/.build/MolliePayments.zip'
    required: false



runs:
  using: "composite"
  steps:

    - name: Mount Build Cache
      uses: actions/cache@v3
      with:
        key: cache-plugin
        path: ~/.build

    # --------------------------------------------------------------------------------------------------------------------------------------

    - name: Download Docker
      shell: bash
      run: docker pull dockware/play:${{ inputs.shopware }}

    - name: Start Docker
      shell: bash
      run: |
        docker run -p 443:443 --name shop --env PHP_VERSION=${{ inputs.php }} --env SW_API_ACCESS_KEY=${{ inputs.storeApiKey }} -d dockware/play:${{ inputs.shopware }}
        sleep 15
        docker logs shop
        # now change the domain of our shop, mollie doesn't work with localhost
        sudo echo "127.0.0.1 ${{ inputs.shopDomain }}" | sudo tee -a /etc/hosts
        docker exec shop bash -c "mysql -u root -proot shopware -e \"UPDATE sales_channel_domain SET url='https://${{ inputs.shopDomain }}' WHERE url NOT LIKE 'default.%';\""

    - name: Update Shopware Config
      shell: bash
      run: |
        docker exec shop bash -c 'sed -i "s/APP_ENV=dev/APP_ENV=prod/g" /var/www/html/.env' || true;

    # --------------------------------------------------------------------------------------------------------------------------------------

    - name: Upload ZIP File to Docker
      shell: bash
      run: |
        docker cp ${{ inputs.zipFile }} shop:/var/www/html/custom/plugins/MolliePayments.zip
        docker exec shop bash -c 'cd /var/www/html/custom/plugins && unzip -qq -o MolliePayments.zip'

    - name: Install/Configure Plugin
      shell: bash
      run: |
        docker exec shop bash -c 'php bin/console plugin:refresh'
        docker exec shop bash -c 'php bin/console plugin:install MolliePayments --activate'
        docker exec shop bash -c 'php bin/console system:config:set MolliePayments.config.testMode true'
        docker exec shop bash -c 'php bin/console cache:clear'

    # --------------------------------------------------------------------------------------------------------------------------------------

    - name: Install Cypress
      if: ${{ inputs.runCypress != '0' }}
      shell: bash
      run: cd tests/Cypress && make install -B

    - name: Remove deprecated Cypress Tests
      if: ${{ inputs.runCypress != '0' && inputs.removeDeprecatedTests != '0' }}
      shell: bash
      run: |
        # SEPA Direct Debit has been completely removed from Mollie. We have to remove that entry from the tests in old Cypress versions
        sed -i "/key: 'directdebit'/g" $(pwd)/tests/Cypress/cypress/e2e/storefront/checkout/checkout-success.cy.js || true
        sed -i "/key: 'directdebit'/g" $(pwd)/tests/Cypress/cypress/integration/storefront/checkout/checkout-success.spec.js || true

    - name: Start Cypress
      if: ${{ inputs.runCypress != '0' && inputs.testrail == '0' }}
      shell: bash
      run: |
        cd tests/Cypress && \
        make run shopware=${{ inputs.shopware }} storeApiKey=${{ inputs.storeApiKey }} url=https://${{ inputs.shopDomain }} filters="${{ inputs.filters }}"

    - name: Start Cypress with TestRail
      if: ${{ inputs.runCypress != '0' && inputs.testrail != '0' }}
      shell: bash
      run: |
        cd tests/Cypress && \
        CYPRESS_TESTRAIL_DOMAIN=${{ inputs.TESTRAIL_DOMAIN }} \
        CYPRESS_TESTRAIL_USERNAME=${{ inputs.TESTRAIL_USERNAME }} \
        CYPRESS_TESTRAIL_PASSWORD=${{ inputs.TESTRAIL_PASSWORD }} \
        CYPRESS_TESTRAIL_PROJECT_ID=7 \
        CYPRESS_TESTRAIL_MILESTONE_ID=15 \
        CYPRESS_TESTRAIL_RUN_NAME="Github Workflow __datetime__, ${{ github.event.head_commit.message }}, Shopware ${{ inputs.shopware }}" \
        CYPRESS_TESTRAIL_RUN_CLOSE=true \
        make run shopware=${{ inputs.shopware }} storeApiKey=${{ inputs.storeApiKey }} url=https://${{ inputs.shopDomain }} 

    # --------------------------------------------------------------------------------------------------------------------------------------

    - name: Download Logs
      if: ${{ inputs.runCypress != '0' && always() }}
      shell: bash
      run: |
        mkdir -p $(pwd)/tests/Cypress/cypress/logs/shopware
        mkdir -p $(pwd)/tests/Cypress/cypress/logs/apache
        docker cp shop:/var/www/html/var/log/. $(pwd)/tests/Cypress/cypress/logs/shopware
        docker cp shop:/var/log/php/. $(pwd)/tests/Cypress/cypress/logs/apache

    - name: Store Cypress Results
      if: ${{ inputs.runCypress != '0' && always() }}
      uses: actions/upload-artifact@v2
      with:
        name: cypress_results_sw_v${{ inputs.shopware }}
        retention-days: 1
        path: |
          tests/Cypress/cypress/results
          tests/Cypress/cypress/logs
          tests/Cypress/cypress/videos
          tests/Cypress/cypress/screenshots