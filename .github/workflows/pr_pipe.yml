name: PR Pipeline

on: [pull_request, workflow_dispatch]



env:
  STORE_API_KEY: SWSCOVFSNKLBYUTKS1VSOEDTUQ
  BUILD_SW_VERSION: 6.4.16.0


jobs:


  install:
    name: Install Dev Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Clone Code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Mount Dev-Dependencies Cache
        uses: actions/cache@v3
        with:
          key: cache-dependencies
          path: |
            src/Resources/app/administration/node_modules
            src/Resources/app/storefront/node_modules
            vendor

      - name: Install Dependencies
        run: make dev -B

  # ------------------------------------------------------------------------------------------------------------------------

  javascript:
    uses: ./.github/workflows/pipeline_js.yml
    needs: [ install ]

  # ------------------------------------------------------------------------------------------------------------------------

  php:
    uses: ./.github/workflows/pipeline_php.yml
    needs: [ install ]

  # ------------------------------------------------------------------------------------------------------------------------

  build:
    uses: ./.github/workflows/pipeline_build.yml

  integration:
    name: Integration Tests | Shopware ${{ matrix.shopware }}
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shopware: [ '6.4.16.0', '6.4.15.0', '6.4.9.0', '6.4.8.2', '6.4.0.0', '6.3.0', '6.2.0', '6.1.0' ]
    steps:

      - name: Clone Code
        uses: actions/checkout@v2

      - name: Mount Build Cache
        id: cache-build
        uses: actions/cache@v3
        with:
          key: cache-plugin
          path: ~/.build

      - name: Download Docker
        run: |
          docker pull dockware/play:${{ matrix.shopware }}

      - name: Start Docker
        run: |
          docker run --rm --name shop -d dockware/play:${{ matrix.shopware }}
          sleep 20
          docker logs shop

      - name: Update Shopware Config
        run: |
          docker exec shop bash -c 'sed -i "s/APP_ENV=dev/APP_ENV=prod/g" /var/www/html/.env' || true;

      - name: Upload ZIP File to Docker
        run: |
          docker cp ~/.build/MolliePayments.zip shop:/var/www/html/custom/plugins/MolliePayments.zip
          docker exec shop bash -c 'cd /var/www/html/custom/plugins && unzip -o MolliePayments.zip'

      - name: Install/Configure Plugin
        run: |
          docker exec shop bash -c 'php bin/console plugin:refresh'
          docker exec shop bash -c 'php bin/console plugin:install MolliePayments --activate'
          docker exec shop bash -c 'php bin/console system:config:set MolliePayments.config.testMode true'
          docker exec shop bash -c 'php bin/console cache:clear'

  # ------------------------------------------------------------------------------------------------------------------------

  e2e:
    name: E2E Core Tests | Shopware ${{ matrix.shopware }}, PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - shopware: '6.4.16.0'
            php: '8.1'
    steps:

      - name: Clone Code
        uses: actions/checkout@v2

      - uses: ./.github/workflows/pipeline_cypress.yml
        with:
          shopware: ${{ matrix.shopware }}
          php: ${{ matrix.php }}
          storeApiKey: $STORE_API_KEY
          filter: "@core"
