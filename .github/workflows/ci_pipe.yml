name: CI Pipeline


on:
  push:
    branches:
      - master
  workflow_dispatch:


env:
  STORE_API_KEY: SWSCOVFSNKLBYUTKS1VSOEDTUQ


jobs:

  install:
    name: Install Dev Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Clone Code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Mount Dev-Dependencies Cache
        uses: actions/cache@v3
        with:
          key: cache-dependencies
          path: |
            src/Resources/app/administration/node_modules
            src/Resources/app/storefront/node_modules
            vendor

      - name: Install Dependencies
        run: make dev -B

  # ------------------------------------------------------------------------------------------------------------------------

  javascript:
    uses: ./.github/workflows/_pipeline_js.yml
    needs: [ install ]

  # ------------------------------------------------------------------------------------------------------------------------

  php:
    uses: ./.github/workflows/_pipeline_php.yml
    needs: [ install ]

  # ------------------------------------------------------------------------------------------------------------------------

  build:
    uses: ./.github/workflows/_pipeline_build.yml
    with:
      shopware: 6.4.16.0

  e2e:
    name: E2E Tests | Shopware ${{ matrix.shopware }}, PHP ${{ matrix.php }}
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - shopware: '6.4.16.0'
            php: '8.1'
          - shopware: '6.4.15.2'
            php: '8.1'
          - shopware: '6.4.15.1'
            php: '8.1'
          - shopware: '6.4.14.0'
            php: '8.1'
          - shopware: '6.4.12.0'
            php: '8.0'
          - shopware: '6.4.11.1'
            php: '8.0'
          - shopware: '6.4.10.0'
            php: '8.0'
          - shopware: '6.4.9.0'
            php: '7.4'
          - shopware: '6.4.8.2'
            php: '7.4'
          - shopware: '6.4.7.0'
            php: '7.4'
          - shopware: '6.4.6.1'
            php: '7.4'
          - shopware: '6.4.5.1'
            php: '7.4'
          - shopware: '6.4.4.1'
            php: '7.4'
          - shopware: '6.4.2.1'
            php: '7.4'
          - shopware: '6.4.1.2'
            php: '7.4'
          - shopware: '6.3.5.2'
            php: '7.2'
    steps:

      - name: Clone Code
        uses: actions/checkout@v2

      - name: Mount Build Cache
        id: cache-build
        uses: actions/cache@v3
        with:
          key: cache-plugin
          path: ~/.build

      - name: Download Docker
        run: |
          docker pull dockware/play:${{ matrix.shopware }}

      - name: Start Docker
        run: |
          docker run --rm -p 443:443 --name shop --env PHP_VERSION=${{ matrix.php }} --env SW_API_ACCESS_KEY=$STORE_API_KEY -d dockware/play:${{ matrix.shopware }}
          sleep 20
          docker logs shop
          # now change the domain of our shop, mollie doesn't work with localhost
          sudo echo "127.0.0.1 local.mollie.shop" | sudo tee -a /etc/hosts
          docker exec shop bash -c "mysql -u root -proot shopware -e \"UPDATE sales_channel_domain SET url='https://local.mollie.shop' WHERE url NOT LIKE 'default.%';\""

      - name: Update Shopware Config
        run: |
          docker exec shop bash -c 'sed -i "s/APP_ENV=dev/APP_ENV=prod/g" /var/www/html/.env' || true;

      - name: Upload ZIP File to Docker
        run: |
          docker cp ~/.build/MolliePayments.zip shop:/var/www/html/custom/plugins/MolliePayments.zip
          docker exec shop bash -c 'cd /var/www/html/custom/plugins && unzip -o MolliePayments.zip'

      - name: Install/Configure Plugin
        run: |
          docker exec shop bash -c 'php bin/console plugin:refresh'
          docker exec shop bash -c 'php bin/console plugin:install MolliePayments --activate'
          docker exec shop bash -c 'php bin/console system:config:set MolliePayments.config.liveApiKey ${{ secrets.MOLLIE_APIKEY_TEST }}'
          docker exec shop bash -c 'php bin/console system:config:set MolliePayments.config.testApiKey ${{ secrets.MOLLIE_APIKEY_TEST }}'
          docker exec shop bash -c 'php bin/console system:config:set MolliePayments.config.testMode true'
          docker exec shop bash -c 'php bin/console cache:clear'

      - name: Install Cypress
        run: cd tests/Cypress && make install -B

      - name: Start Cypress
        run: cd tests/Cypress && CYPRESS_TESTRAIL_DOMAIN=${{ secrets.TESTRAIL_DOMAIN }} CYPRESS_TESTRAIL_USERNAME=${{ secrets.TESTRAIL_USERNAME }} CYPRESS_TESTRAIL_PASSWORD=${{ secrets.TESTRAIL_PASSWORD }} CYPRESS_TESTRAIL_PROJECT_ID=7 CYPRESS_TESTRAIL_MILESTONE_ID=15 CYPRESS_TESTRAIL_RUN_NAME="Github Workflow __datetime__, ${{ github.event.head_commit.message }}, Shopware ${{ matrix.shopware }}" CYPRESS_TESTRAIL_RUN_CLOSE=true make run shopware=${{ matrix.shopware }} url=https://local.mollie.shop storeApiKey=$STORE_API_KEY

      - name: Download Logs
        if: ${{ always() }}
        run: |
          mkdir -p $(pwd)/tests/Cypress/cypress/logs/shopware
          mkdir -p $(pwd)/tests/Cypress/cypress/logs/apache
          docker cp shop:/var/www/html/var/log/. $(pwd)/tests/Cypress/cypress/logs/shopware
          docker cp shop:/var/log/php/. $(pwd)/tests/Cypress/cypress/logs/apache

      - name: Store Cypress Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress_results_sw_v${{ matrix.shopware }}
          retention-days: 1
          path: |
            tests/Cypress/cypress/results
            tests/Cypress/cypress/logs
            tests/Cypress/cypress/videos
            tests/Cypress/cypress/screenshots



  build_tests:
    name: Building Tests | Shopware ${{ matrix.shopware }}
    needs: [ build, e2e ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shopware: [ '6.4.0.0', '6.3.0', '6.2.0', '6.1.0' ]
    steps:

      - name: Clone Code
        uses: actions/checkout@v2

      - uses: ./.github/workflows/_pipeline_build.yml
        with:
          shopware: ${{ matrix.shopware }}



